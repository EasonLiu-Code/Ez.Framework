<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ez.Framework.Domain</name>
    </assembly>
    <members>
        <member name="T:Ez.Domain.CommonDtos.Events.TestMessageEvent">
            <summary>
            TestMessageEvent
            </summary>
        </member>
        <member name="P:Ez.Domain.CommonDtos.Events.TestMessageEvent.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="T:Ez.Domain.Consumers.IConsumer">
            <summary>
            Mark
            </summary>
        </member>
        <member name="T:Ez.Domain.Consumers.TestConsumer">
            <summary>
            Consumer
            </summary>
        </member>
        <member name="M:Ez.Domain.Consumers.TestConsumer.Consume(MassTransit.ConsumeContext{Ez.Domain.CommonDtos.Events.TestMessageEvent})">
            <summary>
            Consume
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Ez.Domain.DependencyInjection">
            <summary>
            DependencyInjection
            </summary>
        </member>
        <member name="M:Ez.Domain.DependencyInjection.AddDomain(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AddDomain
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Ez.Domain.Entities.Article">
            <summary>
            Article
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.Article.ArticleId">
            <summary>
            ArticleId
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.Article.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.Article.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.Article.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.Article.CreatedOnUtc">
            <summary>
            CreatedOnUtc
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.Article.PublishedOnUtc">
            <summary>
            PublishedOnUtc
            </summary>
        </member>
        <member name="T:Ez.Domain.Entities.BaseEntity">
            <summary>
            BaseEntity
            </summary>
        </member>
        <member name="P:Ez.Domain.Entities.BaseEntity.Id">
            <summary> 主键 </summary>
        </member>
        <member name="P:Ez.Domain.Entities.BaseEntity.IsDeleted">
            <summary>是否删除</summary>
        </member>
        <member name="M:Ez.Domain.Entities.BaseEntity.Delete">
            <summary></summary>
        </member>
        <member name="M:Ez.Domain.Entities.BaseEntity.UnDelete">
            <summary></summary>
        </member>
        <member name="T:Ez.Domain.IRepositories.IArticleRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ez.Domain.IRepositories.IBaseRepository`1">
            <summary>
            IBaseRepository
            </summary>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.FirstOrDefaultAsNoTrackingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            FirstOrDefaultAsNoTrackingAsync
            </summary>
            <param name="func"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.GetAllListAsNoTrackingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            GetAllListAsNoTrackingAsync
            </summary>
            <param name="func"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            GetListAsync
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.InsertAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            InsertAsync
            </summary>
            <param name="entity"></param>
            <param name="autoSave"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            InsertManyAsync
            </summary>
            <param name="entities"></param>
            <param name="autoSave"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.UpdateAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            UpdateAsync
            </summary>
            <param name="entity"></param>
            <param name="autoSave"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.UpdateManyAsync(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            UpdateManyAsync
            </summary>
            <param name="entities"></param>
            <param name="autoSave"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.ExecuteUpdateAsync(System.Func{`0,`0},System.Func{`0,`0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            ExecuteUpdateAsync
            </summary>
            <param name="propertyExpression"></param>
            <param name="valueExpression"></param>
            <param name="autoSave"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ez.Domain.IRepositories.IBaseRepository`1.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            SaveChangesAsync
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Ez.Domain.Publishers.MessagePublisher">
            <summary>
            MessagePublisher
            </summary>
        </member>
        <member name="M:Ez.Domain.Publishers.MessagePublisher.#ctor(MassTransit.IBus)">
            <summary>
            MessagePublisher
            </summary>
        </member>
        <member name="M:Ez.Domain.Publishers.MessagePublisher.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="stoppingToken"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
